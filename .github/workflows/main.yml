name: Deploy

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
  repository_dispatch:
    types: [contentful.deploy]
  schedule:
    - cron: "0 0 * * *"

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: "Create Env"
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: v18.18.1

      - name: Get node_modules cache
        uses: actions/cache@v3
        id: node_modules
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}-${{ steps.node.outputs.version }}
        if: success()

      - name: Install Dependencies
        run: npm ci

      - name: Install Contentful CLI
        run: npm install -g contentful-cli

      - name: Test
        run: npm run test
        if: success()

      - name: Run Prettier
        run: npm run format
        if: success()

      - name: Run ESLint
        run: npm run lint
        if: success()

      - name: Set Git Config
        run: |
          git config --global user.email "gmrribeira@ua.pt"
          git config --global user.name "Gabriel Ribeira"

      - name: Generate Documentation
        run: npx jsdoc -c jsdoc.json

      - name: Configure GitHub Pages
        run: npx gh-pages -d docs
        if: github.ref == 'refs/heads/main' # Only deploy on main branch

      - name: Push to GitHub Pages
        run: git push origin gh-pages
        if: github.ref == 'refs/heads/main'

      - name: Build
        run: npm run build
        env:
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
        if: success()

      - name: Deploy
        run: npx netlify-cli deploy --site ${{ secrets.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --prod
        if: success() && github.event_name != 'push'

      - name: Send Notification to Microsoft Teams
        run: |
          COMMITTER="$(git log -1 --pretty=format:'%an')"
          REPO="${GITHUB_REPOSITORY}"
          BRANCH="${GITHUB_HEAD_REF}"
          MESSAGE="Deployment to *${BRANCH}* branch of *${REPO}* by *${COMMITTER}* has completed successfully!"
          PAYLOAD="{\"text\":\"$MESSAGE\"}"
          curl -H "Content-Type: application/json" -d "$PAYLOAD" "${{ secrets.TEAMS_WEBHOOK_URL }}"
